#!/bin/bash

function select_java() {
    local expected_java_versions
    expected_java_versions=$@

    for expected_java_version in $expected_java_versions; do
        for java_home in /usr/lib/jvm/*; do
            java=$java_home/bin/java
            javaver=$($java -XshowSettings:properties -version 2>&1 | awk -F' = ' '/java.specification.version/ {print $NF}')
            if [ "$javaver" = $expected_java_version ]; then
                echo $java
                return
            fi
        done
    done
}

# So far, scylla-jmx only works with Java 11 and Java 8, we prefer the newer
# one for better upstream support.
expected_java_versions="11 1.8"

java=$(select_java $expected_java_versions)
if [ -z "$java" ]; then
    versions=$(echo $expected_java_versions | sed 's/ / and /')
    echo "Unable to find java executable of versions: $versions" >& 2
    exit 1
fi

exec $java $*
